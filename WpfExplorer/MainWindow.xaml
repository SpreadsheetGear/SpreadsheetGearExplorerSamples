<!--
    Copyright © SpreadsheetGear LLC. All Rights Reserved.
    SpreadsheetGear® is a registered trademark of SpreadsheetGear LLC.
-->
<Window x:Class="WPFExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFExplorer"
        xmlns:shared="clr-namespace:SharedSamples;assembly=SharedSamples"
        mc:Ignorable="d"
        Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowState="Maximized" 
        Title="SpreadsheetGear - WPF Explorer" 
        Icon="/SpreadsheetGearLogo.ico" Loaded="Window_Loaded">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TreeView x:Name="samplesTreeView" Grid.Column="0" SelectedItemChanged="samplesTreeView_SelectedItemChanged">
            <TreeView.Resources>
                <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                </Style>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
                <HierarchicalDataTemplate DataType="{x:Type shared:Category}" ItemsSource="{Binding Path=CategoriesAndSampleInfos}">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                        <Image Name="img" Source="{Binding Converter={x:Static local:CategoryImageConverter.Instance}}" 
                               Width="20" Height="20"/>
                        <TextBlock Text="{Binding Path=Name}" Margin="3,0,0,0" FontWeight="SemiBold"/>
                    </StackPanel>
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                            <Setter TargetName="img" Property="Source" Value="{Binding Converter={x:Static local:CategoryImageConverter.Instance}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{Binding Converter={x:Static local:CategoryImageConverter.Instance}}"/>
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type shared:SampleInfo}">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                        <Image Name="img2" Source="{Binding Converter={x:Static local:SampleInfoImageConverter.Instance}}" 
                               Width="20" Height="20"/>
                        <TextBlock Text="{Binding Path=Name}" Margin="3,0,0,0"/>
                    </StackPanel>
                </DataTemplate>
            </TreeView.Resources>
            <TreeView.Background>
                <SolidColorBrush Color="#FFFAFAFA"/>
            </TreeView.Background>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

        <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Style="{StaticResource GridSplitterStyleVertical}" BorderBrush="#FFBBBBBB" BorderThickness="1" />

        <local:SampleContainer Grid.Column="2" x:Name="sampleContainer"></local:SampleContainer>
    </Grid>
</Window>
